<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership. The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.3.xsd">

    <changeSet id="1" author="fineract">
        <sql>
            <![CDATA[
            UPDATE m_product_loan
            SET
                loan_schedule_type = 'PROGRESSIVE',
                loan_schedule_processing_type = 'HORIZONTAL',
                loan_transaction_strategy_name = 'Advanced payment allocation strategy',
                loan_transaction_strategy_code = 'advanced-payment-allocation-strategy'
            WHERE loan_schedule_type = 'CUMULATIVE';
            ]]>
        </sql>
    </changeSet>
    <changeSet id="4" author="fineract">
        <sql>
            <![CDATA[
                INSERT INTO m_loan_product_payment_allocation_rule (
                    loan_product_id,
                    transaction_type,
                    allocation_types,
                    future_installment_allocation_rule,
                    created_by,
                    last_modified_by,
                    created_on_utc,
                    last_modified_on_utc)
                SELECT mpl.id,
                       'DEFAULT',
                       'PAST_DUE_PENALTY,PAST_DUE_PRINCIPAL,PAST_DUE_INTEREST,PAST_DUE_FEES,PAST_DUE_AVAL,PAST_DUE_MANDATORY_INSURANCE,PAST_DUE_VOLUNTARY_INSURANCE,DUE_PENALTY,DUE_PRINCIPAL,DUE_INTEREST,DUE_FEES,DUE_AVAL,DUE_MANDATORY_INSURANCE,DUE_VOLUNTARY_INSURANCE,IN_ADVANCE_PENALTY,IN_ADVANCE_PRINCIPAL,IN_ADVANCE_INTEREST,IN_ADVANCE_FEES,IN_ADVANCE_AVAL,IN_ADVANCE_MANDATORY_INSURANCE,IN_ADVANCE_VOLUNTARY_INSURANCE',
                       'NEXT_INSTALLMENT',
                       1,
                       1,
                       NOW(),
                       NOW()
                FROM m_product_loan mpl
                WHERE mpl.id NOT IN (SELECT loan_product_id FROM m_loan_product_payment_allocation_rule);
            ]]>
        </sql>
    </changeSet>
    <changeSet id="5" author="fineract">
        <sql>
            <![CDATA[
                INSERT INTO m_loan_payment_allocation_rule (
                    loan_id,
                    transaction_type,
                    allocation_types,
                    future_installment_allocation_rule,
                    created_by,
                    last_modified_by,
                    created_on_utc,
                    last_modified_on_utc)
                SELECT ml.id,
                       'DEFAULT',
                       'PAST_DUE_PENALTY,PAST_DUE_PRINCIPAL,PAST_DUE_INTEREST,PAST_DUE_FEES,PAST_DUE_AVAL,PAST_DUE_MANDATORY_INSURANCE,PAST_DUE_VOLUNTARY_INSURANCE,DUE_PENALTY,DUE_PRINCIPAL,DUE_INTEREST,DUE_FEES,DUE_AVAL,DUE_MANDATORY_INSURANCE,DUE_VOLUNTARY_INSURANCE,IN_ADVANCE_PENALTY,IN_ADVANCE_PRINCIPAL,IN_ADVANCE_INTEREST,IN_ADVANCE_FEES,IN_ADVANCE_AVAL,IN_ADVANCE_MANDATORY_INSURANCE,IN_ADVANCE_VOLUNTARY_INSURANCE',
                       'NEXT_INSTALLMENT',
                       ml.created_by,
                       ml.last_modified_by ,
                       ml.created_on_utc,
                       ml.last_modified_on_utc
                FROM m_loan ml
                WHERE ml.id NOT IN (SELECT loan_id FROM m_loan_payment_allocation_rule);
            ]]>
        </sql>
    </changeSet>
</databaseChangeLog>
