<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership. The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">

    <changeSet author="fineract" id="10">
        <sql endDelimiter=";">
            with cte as (
    select mpl.id product_id, mpl.name product_name, mpl.loan_schedule_type, mpl.loan_schedule_processing_type, mplr.id allocation_id,
    unnest(string_to_array(mplr.allocation_types, ',')) allocation_type
    from m_product_loan mpl
    join m_loan_product_payment_allocation_rule mplr on mplr.loan_product_id = mpl.id
    where mpl.loan_schedule_processing_type = 'VERTICAL'
    ),
    allocation_types as (
    select  ROW_NUMBER() OVER (order by 1) serial_num,
    case
        when cte.allocation_type like 'PAST_DUE%' THEN 1
        when cte.allocation_type like 'DUE%' THEN 2
        Else 3
    END as "sort_order", cte.allocation_type, cte.allocation_id
    from cte
    ),
    sorted_allocation_types as (
        select  allocation_id, string_agg(allocation_types.allocation_type,',' order by allocation_id, sort_order, serial_num) from allocation_types group by allocation_id
    )
    update m_loan_product_payment_allocation_rule
    set allocation_types = sat.string_agg
    from sorted_allocation_types as sat
    where sat.allocation_id = id;
        </sql>
    </changeSet>

    <changeSet author="fineract" id="20">
        <sql endDelimiter=";">
            with cte as (
    select mpl.loan_schedule_type, mpl.loan_schedule_processing_type, mplr.id allocation_id,
    unnest(string_to_array(mplr.allocation_types, ',')) allocation_type
    from m_loan mpl
    join m_loan_payment_allocation_rule mplr on mplr.loan_id = mpl.id
    where mpl.loan_schedule_processing_type = 'VERTICAL'
    ),
    allocation_types as (
    select  ROW_NUMBER() OVER (order by 1) serial_num,
    case
        when cte.allocation_type like 'PAST_DUE%' THEN 1
        when cte.allocation_type like 'DUE%' THEN 2
        Else 3
    END as "sort_order", cte.allocation_type, cte.allocation_id
    from cte
    ),
    sorted_allocation_types as (
        select  allocation_id, string_agg(allocation_types.allocation_type,',' order by allocation_id, sort_order, serial_num) from allocation_types group by allocation_id
    )
    update m_loan_payment_allocation_rule
    set allocation_types = sat.string_agg
    from sorted_allocation_types as sat
    where sat.allocation_id = id;
        </sql>
    </changeSet>

</databaseChangeLog>
