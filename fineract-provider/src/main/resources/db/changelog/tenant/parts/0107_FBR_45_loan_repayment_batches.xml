<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership. The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">

    <changeSet author="fineract" id="1">
        <addColumn tableName="m_product_loan">
            <column name="payment_tolerance_limit" type="DECIMAL(19, 6)" defaultValueNumeric="0.000000">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet author="fineract" id="2">
        <addColumn tableName="m_supervision">
            <column name="agency_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet author="fineract" id="3">
        <addColumn tableName="m_portfolio">
            <column name="supervision_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="4" author="fineract">
        <sql>
            <![CDATA[
                    UPDATE  m_office mo
                    INNER JOIN m_office office_under ON office_under.hierarchy LIKE CONCAT(mo.hierarchy, '%')
                    INNER JOIN m_appuser agency_responsible_user ON agency_responsible_user.office_id = office_under.id
                    INNER JOIN m_office agency_responsible_user_office ON agency_responsible_user_office.id = agency_responsible_user.office_id
                    INNER JOIN m_agency ma ON ma.responsible_user_id = agency_responsible_user.id
                    INNER JOIN m_office agency_office_under ON agency_office_under.hierarchy LIKE CONCAT(agency_responsible_user_office.hierarchy, '%')
                    INNER JOIN m_appuser supervison_responsible_user ON agency_responsible_user.office_id = agency_office_under.id
                    INNER JOIN m_office supervision_responsible_user_office ON supervision_responsible_user_office.id = supervison_responsible_user.office_id
                    INNER JOIN m_supervision ms ON ms.responsible_user_id = supervison_responsible_user.id
                    SET ms.agency_id = ma.id;
            ]]>
        </sql>
        <sql>
            <![CDATA[
                    UPDATE  m_office mo
                    INNER JOIN m_office office_under ON office_under.hierarchy LIKE CONCAT(mo.hierarchy, '%')
                    INNER JOIN m_appuser agency_responsible_user ON agency_responsible_user.office_id = office_under.id
                    INNER JOIN m_office agency_responsible_user_office ON agency_responsible_user_office.id = agency_responsible_user.office_id
                    INNER JOIN m_agency ma ON ma.responsible_user_id = agency_responsible_user.id
                    INNER JOIN m_office agency_office_under ON agency_office_under.hierarchy LIKE CONCAT(agency_responsible_user_office.hierarchy, '%')
                    INNER JOIN m_appuser supervison_responsible_user ON agency_responsible_user.office_id = agency_office_under.id
                    INNER JOIN m_office supervision_responsible_user_office ON supervision_responsible_user_office.id = supervison_responsible_user.office_id
                    INNER JOIN m_supervision ms ON ms.responsible_user_id = supervison_responsible_user.id
                    INNER JOIN m_office supervison_office_under ON supervison_office_under.hierarchy LIKE CONCAT(supervision_responsible_user_office.hierarchy, '%')
                    INNER JOIN m_appuser portfolio_responsible_user ON portfolio_responsible_user.office_id = supervison_office_under.id
                    INNER JOIN m_portfolio mp ON mp.responsible_user_id = portfolio_responsible_user.id
                    SET mp.supervision_id = ms.id;
            ]]>
        </sql>
    </changeSet>

    <changeSet id="5" author="fineract">
        <sql>
            <![CDATA[
                    UPDATE stretchy_report SET report_sql = "SELECT
                    dt.clientId AS 'Nro Solicitud',
                    dt.clientNo AS 'Codigo Cliente',
                    dt.clientName AS 'Cliente',
                    dt.groupNo AS 'Nro Grupo',
                    dt.groupName AS 'Nombre Grupo',
                    dt.agencyName AS 'Agencia',
                    dt.approvedPrincipal AS 'Monto Otorgado',
                    dt.outstandingPrincipal AS 'Saldo Capital',
                    dt.repaidPrincipal AS 'Capital Recuperado',
                    dt.repaidInterest AS 'Intereses',
                    dt.totalRepaid AS 'Total Cobrad'
                    FROM (
                            SELECT
                            mc.id AS clientId,
                            mc.account_no AS clientNo,
                            mc.display_name AS clientName,
                            COALESCE(mg.account_no, 'N/A') AS groupNo,
                            COALESCE(mg.display_name, 'N/A') AS groupName,
                            COALESCE(ma.name, 'N/A') AS agencyName,
                            ml.approved_principal AS approvedPrincipal ,
                            ml.principal_outstanding_derived AS outstandingPrincipal,
                            ml.principal_repaid_derived AS repaidPrincipal,
                            ml.interest_repaid_derived AS repaidInterest,
                            ml.total_repaid AS totalRepaid
                            FROM m_office mo
                            INNER JOIN m_office office_under ON office_under.hierarchy LIKE CONCAT(mo.hierarchy, '%')AND office_under.hierarchy LIKE CONCAT('${currentUserHierarchy}', '%')
                            INNER JOIN m_client mc ON mc.office_id = office_under.id
                            INNER JOIN (
                                SELECT
                                SUM(IFNULL(m_loan.approved_principal, 0)) AS approved_principal,
                                SUM(IFNULL(m_loan.principal_outstanding_derived, 0)) AS principal_outstanding_derived,
                                SUM(IFNULL(m_loan.principal_repaid_derived, 0)) AS principal_repaid_derived,
                                SUM(IFNULL(m_loan.interest_repaid_derived, 0)) AS interest_repaid_derived,
                                SUM(IFNULL(m_loan.principal_repaid_derived, 0) + IFNULL(m_loan.interest_repaid_derived, 0)) AS total_repaid,
                                m_loan.client_id AS client_id
                                FROM m_loan m_loan
                                WHERE(m_loan.submittedon_date BETWEEN '${submittedOnStartDate}' AND '${submittedOnEndDate}') AND (m_loan.fund_id = '${fundId}' OR '-1' = '${fundId}')AND (m_loan.loan_status_id = 300)
                                GROUP BY m_loan.client_id
                            ) ml ON ml.client_id = mc.id
                            LEFT JOIN m_group_client mgc ON mgc.client_id  = mc.id
                            LEFT JOIN m_group mg ON mg.id = mgc.group_id
                            LEFT JOIN m_group center ON center.id = mg.parent_id
                            LEFT JOIN m_portfolio mp ON mp.id = center.portfolio_id
                            LEFT JOIN m_supervision ms ON ms.id = mp.supervision_id
                            LEFT JOIN m_agency ma ON ma.id = ms.agency_id
                            GROUP BY mc.id ORDER BY mc.id
                    )dt" WHERE report_name = "Reporte por Clienta de Cobranzas y Saldos por Financista";
                ]]>
        </sql>
    </changeSet>

    <changeSet id="6" author="fineract">
        <sql>
            <![CDATA[
                        UPDATE stretchy_report SET report_sql = "SELECT
                        dt.groupId AS 'Nro Solicitud',
                        dt.groupNo AS 'Nro Grupo',
                        dt.groupName AS 'Nombre Grupo',
                        dt.agencyName AS 'Agencia',
                        dt.approvedPrincipal AS 'Monto Otorgado',
                        dt.outstandingPrincipal AS 'Saldo Capital',
                        dt.repaidPrincipal AS 'Capital Recuperado',
                        dt.repaidInterest AS 'Intereses',
                        dt.totalRepaid AS 'Total Cobrad'
                    FROM (
                        SELECT
                            mg.id AS groupId,
                            mg.account_no AS groupNo,
                            mg.display_name AS groupName,
                            COALESCE(ma.name, 'N/A') AS agencyName,
                            ml.approved_principal AS approvedPrincipal ,
                            ml.principal_outstanding_derived AS outstandingPrincipal,
                            ml.principal_repaid_derived AS repaidPrincipal,
                            ml.interest_repaid_derived AS repaidInterest,
                            ml.total_repaid AS totalRepaid
                        FROM m_office mo
                        INNER JOIN m_office office_under ON office_under.hierarchy LIKE CONCAT(mo.hierarchy, '%')AND office_under.hierarchy LIKE CONCAT('${currentUserHierarchy}', '%')
                        INNER JOIN m_group mg ON (office_under.id = mg.office_id AND mg.parent_id IS NOT NULL)
                        INNER JOIN (
                            SELECT
                                SUM(IFNULL(m_loan.approved_principal, 0)) AS approved_principal,
                                SUM(IFNULL(m_loan.principal_outstanding_derived, 0)) AS principal_outstanding_derived,
                                SUM(IFNULL(m_loan.principal_repaid_derived, 0)) AS principal_repaid_derived,
                                SUM(IFNULL(m_loan.interest_repaid_derived, 0)) AS interest_repaid_derived,
                                SUM(IFNULL(m_loan.principal_repaid_derived, 0) + IFNULL(m_loan.interest_repaid_derived, 0)) AS total_repaid,
                                m_loan.group_id AS group_id
                            FROM m_loan m_loan
                            WHERE (m_loan.submittedon_date BETWEEN '${submittedOnStartDate}' AND '${submittedOnEndDate}') AND(m_loan.fund_id = '${fundId}' OR '-1' = '${fundId}')AND (m_loan.loan_status_id = 300)
                            GROUP BY m_loan.group_id
                        ) ml ON ml.group_id = mg.id
                        LEFT JOIN m_group center ON center.id = mg.parent_id
                        LEFT JOIN m_portfolio mp ON mp.id = center.portfolio_id
                        LEFT JOIN m_supervision ms ON ms.id = mp.supervision_id
                        LEFT JOIN m_agency ma ON ma.id = ms.agency_id
                        GROUP BY mg.id ORDER BY mg.id
                    )dt" WHERE report_name = "Reporte Grupal de Cobranzas y Saldos por Financista";
                ]]>
        </sql>
    </changeSet>

    <changeSet author="fineract" id="7">
        <insert tableName="job">
            <column name="name" value="Import Batches of Loan Repayments"/>
            <column name="display_name" value="Import Batches of Loan Repayments"/>
            <column name="cron_expression" value="0 0 * ? * * *"/>
            <column name="create_time" valueDate="${current_datetime}"/>
            <column name="task_priority" valueNumeric="5"/>
            <column name="group_name"/>
            <column name="previous_run_start_time"/>
            <column name="job_key" value="Import Batches of Loan RepaymentsJobDetail1 _ DEFAULT"/>
            <column name="initializing_errorlog"/>
            <column name="is_active" valueBoolean="true"/>
            <column name="currently_running" valueBoolean="false"/>
            <column name="updates_allowed" valueBoolean="true"/>
            <column name="scheduler_group" valueNumeric="3"/>
            <column name="is_misfired" valueBoolean="false"/>
            <column name="node_id" valueNumeric="1"/>
            <column name="is_mismatched_job" valueBoolean="false"/>
        </insert>
    </changeSet>

    <changeSet author="fineract" id="8">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="job_run_history"/>
        </preConditions>
        <modifyDataType tableName="job_run_history" columnName="error_log" newDataType="LONGTEXT"/>
    </changeSet>

    <changeSet author="fineract" id="9">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="job_run_history"/>
        </preConditions>
        <modifyDataType tableName="job_run_history" columnName="error_message" newDataType="LONGTEXT"/>
    </changeSet>
</databaseChangeLog>
